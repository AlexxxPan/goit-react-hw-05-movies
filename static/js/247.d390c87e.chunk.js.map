{"version":3,"file":"static/js/247.d390c87e.chunk.js","mappings":"kOA8CA,UAzCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACP,IAAMC,EAAe,mCAAG,2FACvBF,GAAW,GADY,kBAGAG,EAAAA,EAAAA,YAAgBT,GAHhB,OAGfG,EAHe,OAIrBC,EAAUD,GAJW,gDAMrBO,QAAQC,IAAR,MANqB,yBAQrBL,GAAW,GARU,4EAAH,qDAWtBE,GACD,GAAE,CAACR,KAGF,2BACGK,IAAW,SAAC,IAAD,KACZ,wBACGF,EAAOS,KAAI,SAAAC,GAAK,OACf,2BACE,gBACEC,MAAM,QAENC,IAAKF,EAAMG,aAAgB,0CAA4CH,EAAMG,aAAiB,sCAC9FC,IAAKJ,EAAMK,iBAEb,uBAAIL,EAAMM,QACV,uCAAeN,EAAMO,eARdP,EAAMQ,GADA,QAexB,C,mEC3CD,EAAyB,uB,SCgBzB,EAde,WACP,OAAO,gBAAKC,UAAWC,EAAhB,UACP,SAAC,KAAD,CACGC,OAAO,MACPV,MAAM,MACNW,UAAU,uBACVC,aAAc,CAAC,EACfC,aAAa,uBACbC,YAAc,UACdC,SAAW,aAGrB,C,8DCbDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEVC,EAAa,mCAAG,oGACKF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD9C,cACZE,EADY,yBAEXA,EAASC,KAAKC,SAFH,2CAAH,qDAKbC,EAAoB,mCAAG,WAAMC,GAAN,uFACFP,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,iCAAmEM,EAAnE,gCADE,cACnBJ,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,sDAKpBG,EAAiB,mCAAG,WAAMtC,GAAN,uFACC8B,EAAAA,EAAAA,IAAA,gBAAmB9B,EAAnB,oBAAsC+B,EAAtC,oBADD,cAChBE,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAKjBK,EAAW,mCAAG,WAAMvC,GAAN,uFACO8B,EAAAA,EAAAA,IAAA,iBAAoB9B,EAApB,4BAA+C+B,EAA/C,oBADP,cACVE,EADU,yBAETA,EAASC,KAAKM,MAFL,2CAAH,sDAKXC,EAAY,mCAAG,WAAMzC,GAAN,uFACM8B,EAAAA,EAAAA,IAAA,iBAAoB9B,EAApB,4BAA+C+B,EAA/C,2BADN,cACXE,EADW,yBAEVA,EAASC,KAAKC,SAFJ,2CAAH,sDAKZ1B,EAAM,CACRuB,cAAAA,EACAI,qBAAAA,EACAE,kBAAAA,EACAC,YAAAA,EACAE,aAAAA,GAGJ,K","sources":["components/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","service/Api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport Api from '../../service/Api';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n     const onActorsOfMovie = async () => {\n      setLoading(true);\n      try {\n        const actors = await Api.fetchActors(movieId);\n        setActors(actors);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    onActorsOfMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <ul>\n        {actors.map(actor => (\n          <li key={actor.id}>\n            <img\n              width=\"200px\"\n              // src={'https://image.tmdb.org/t/p/w500' + actor.profile_path}\n              src={actor.profile_path ? ('https://www.themoviedb.org/t/p/original' + actor.profile_path) : (\"https://i.stack.imgur.com/FJ65f.png\")}\n              alt={actor.original_name}\n            />\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { ProgressBar } from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nconst Loader = () => {\n        return <div className={styles.loader}>\n        <ProgressBar\n           height=\"100\"\n           width=\"100\"\n           ariaLabel=\"progress-bar-loading\"\n           wrapperStyle={{}}\n           wrapperClass=\"progress-bar-wrapper\"\n           borderColor = '#F4442E'\n           barColor = '#51E5FF'\n          />\n        </div>\n}\n\nexport default Loader;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\nconst API_KEY = 'cf08ee35fdbd112f763f3dc28ef143a6';\n\nconst fetchTrending = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n}\n\nconst fetchSearchByKeyword = async keyword => {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${keyword}&page=1&include_adult=false`);\n    return response.data.results;\n}\n\nconst fetchMovieDetalis = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nconst fetchActors = async movieId => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n}\n\nconst fetchReviews = async movieId => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n}\n\nconst Api = {\n    fetchTrending,\n    fetchSearchByKeyword,\n    fetchMovieDetalis,\n    fetchActors ,\n    fetchReviews,\n}\n\nexport default Api"],"names":["movieId","useParams","useState","actors","setActors","loading","setLoading","useEffect","onActorsOfMovie","Api","console","log","map","actor","width","src","profile_path","alt","original_name","name","character","id","className","styles","height","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","axios","API_KEY","fetchTrending","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetalis","fetchActors","cast","fetchReviews"],"sourceRoot":""}