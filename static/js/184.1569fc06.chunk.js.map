{"version":3,"file":"static/js/184.1569fc06.chunk.js","mappings":"oKA6BA,IA1BmB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,GACCA,EAAMG,KAAI,SAAAC,GAAI,OACZ,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAA/C,SACGG,EAAKK,SAFDL,EAAKE,GADF,KASrB,C,mECjBD,EAAyB,uB,SCgBzB,EAde,WACP,OAAO,gBAAKI,UAAWC,EAAhB,UACP,SAAC,KAAD,CACGC,OAAO,MACPC,MAAM,MACNC,UAAU,uBACVC,aAAc,CAAC,EACfC,aAAa,uBACbC,YAAc,UACdC,SAAW,aAGrB,C,yHC+BD,UAxCe,WACb,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,CAAC,GAAzD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,SAwBpC,OAjBAC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAY,CACd,IAAMG,EAAa,mCAAG,2FACpBP,GAAW,GADS,kBAGQQ,EAAAA,EAAAA,qBAAyBJ,GAHjC,OAGZK,EAHY,OAIlBX,EAAeW,GAJG,gDAMlBC,QAAQC,IAAR,MANkB,yBAQlBX,GAAW,GARO,4EAAH,qDAWnBO,GACD,CACF,GAAE,CAACH,KAGF,6BACE,kBAAMQ,SAxBW,SAAAC,GACnBA,EAAMC,iBACNX,EAAgB,CAAEY,MAAOF,EAAMG,OAAOC,SAASF,MAAMG,MAAMC,eAC5D,EAqBG,WACE,kBAAOC,KAAK,OAAOC,KAAK,QAAQC,WAAS,EAACC,aAAY,OAAEnB,QAAF,IAAEA,EAAAA,EAAY,MACpE,mBAAQgB,KAAK,SAAb,uBAEDrB,IAAW,SAAC,IAAD,IACXF,IAAe,SAAC,IAAD,CAAYpB,MAAOoB,MAGxC,C,8DC1CD2B,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEVC,EAAa,mCAAG,oGACKF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD9C,cACZE,EADY,yBAEXA,EAASC,KAAKC,SAFH,2CAAH,qDAKbC,EAAoB,mCAAG,WAAMC,GAAN,uFACFP,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,iCAAmEM,EAAnE,gCADE,cACnBJ,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,sDAKpBG,EAAiB,mCAAG,WAAMC,GAAN,uFACCT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,oBAAsCR,EAAtC,oBADD,cAChBE,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAKjBM,EAAW,mCAAG,WAAMD,GAAN,uFACOT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,4BAA+CR,EAA/C,oBADP,cACVE,EADU,yBAETA,EAASC,KAAKO,MAFL,2CAAH,sDAKXC,EAAY,mCAAG,WAAMH,GAAN,uFACMT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,4BAA+CR,EAA/C,2BADN,cACXE,EADW,yBAEVA,EAASC,KAAKC,SAFJ,2CAAH,sDAKZrB,EAAM,CACRkB,cAAAA,EACAI,qBAAAA,EACAE,kBAAAA,EACAE,YAAAA,EACAE,aAAAA,GAGJ,K","sources":["components/EditorList/EditorList.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/MoviesPage/MoviesPage.jsx","service/Api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst EditorList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {films &&\n        films.map(film => (\n          <li key={film.id}>\n            <Link to={`/movies/${film.id}`} state={{ from: location }}>\n              {film.title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nEditorList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default EditorList;","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { ProgressBar } from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nconst Loader = () => {\n        return <div className={styles.loader}>\n        <ProgressBar\n           height=\"100\"\n           width=\"100\"\n           ariaLabel=\"progress-bar-loading\"\n           wrapperStyle={{}}\n           wrapperClass=\"progress-bar-wrapper\"\n           borderColor = '#F4442E'\n           barColor = '#51E5FF'\n          />\n        </div>\n}\n\nexport default Loader;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Api from '../../service/Api';\nimport Loader from 'components/Loader/Loader';\nimport EditorList from 'components/EditorList/EditorList';\n\nconst Movies = () => {\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const queryMovie = searchParams.get('query');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: event.target.elements.query.value.toLowerCase() });\n  };\n\n  useEffect(() => {\n    if (queryMovie) {\n      const onSearchMovie = async () => {\n        setLoading(true);\n        try {\n          const searchMovie = await Api.fetchSearchByKeyword(queryMovie);\n          setSearchFilms(searchMovie);\n        } catch (error) {\n          console.log(error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      onSearchMovie();\n    }\n  }, [queryMovie]);\n\n  return (\n    <main>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\" autoFocus defaultValue={queryMovie??''}/>\n        <button type=\"submit\">Search</button>\n      </form>\n      {loading && <Loader />}\n      {searchFilms && <EditorList films={searchFilms} />}\n    </main>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\nconst API_KEY = 'cf08ee35fdbd112f763f3dc28ef143a6';\n\nconst fetchTrending = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n}\n\nconst fetchSearchByKeyword = async keyword => {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${keyword}&page=1&include_adult=false`);\n    return response.data.results;\n}\n\nconst fetchMovieDetalis = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nconst fetchActors = async movieId => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n}\n\nconst fetchReviews = async movieId => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n}\n\nconst Api = {\n    fetchTrending,\n    fetchSearchByKeyword,\n    fetchMovieDetalis,\n    fetchActors ,\n    fetchReviews,\n}\n\nexport default Api"],"names":["films","location","useLocation","map","film","to","id","state","from","title","className","styles","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","useState","searchFilms","setSearchFilms","loading","setLoading","useSearchParams","searchParams","setSearchParams","queryMovie","get","useEffect","onSearchMovie","Api","searchMovie","console","log","onSubmit","event","preventDefault","query","target","elements","value","toLowerCase","type","name","autoFocus","defaultValue","axios","API_KEY","fetchTrending","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetalis","movieId","fetchActors","cast","fetchReviews"],"sourceRoot":""}